1/7, N=7


 1 : 7 = 0
10 : 7 = 1
30 : 7 = 4
20 : 7 = 2 
60 : 7 = 8
40 : 7 = 5
50 : 7 = 7
10 : 7 = 1 -- loop

N:

d = 10
rem = 0
rems = [0 for i in xrange(N)]
i = 1;
while true:
  division = d / n # 1
  reminder = d % n # 3
  if rems[reminder] > 0: 
    return i - rems[reminder]
  rems[reminder] = i # 3 = 1
  d = reminder * 10
  i = i + 1



N=1/3

10 : 3 = 3
10 : 3 = 3
...


----------------------------------------
other solution (slower):
for 1/n - length of cycle is < n

so: 10 ** (length*2) / n -> integer part converted to string will contain 2 cycles at least

